#!/bin/bash

POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -i|--input)
    INPUT="$2"
    shift
    shift
    ;;
    -m|--mode)
    MODE="$2"
    shift
    shift
    ;;
    -h|--help)
    HELP=true
    shift
    ;;
    -a|--axes)
    AXES=true
    shift
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [ "$AXES" = "true" ]; then
    AXES_STR_2D="set xlabel 'x'
    set ylabel 'y'
    set xzeroaxis
    set yzeroaxis"

    AXES_STR_3D="set xlabel 'x'
    set ylabel 'y'
    set zlabel 'z'
    set xzeroaxis
    set yzeroaxis
    set zzeroaxis"
fi

# set term which is suitable for you
PREFIXES="set term wxt;"
PREFIX_2D="${PREFIXES} ${AXES_STR_2D}"
PREFIX_3D="${PREFIXES} ${AXES_STR_3D}; set xyplane at 0;"

if [ "$HELP" = "true" ]; then
    echo "mplot - custom made gnuplot based plotter for scientific data"
    echo "Usage:"
    echo -e "\tmplot -a|--argument [value] ..."
    echo "Arguments:"
    echo -e "\t-i|--input [value] - input file containing data to be plotted"
    echo -e "\t-a|--axes - enable axis labels (XYZ)"
    echo -e "\t-m|--mode [value] - plotter mode, select one of the following:"
    echo -e "\t\t\tsimple2d - standard plot"
    echo -e "\t\t\theat2d - 2D heat map, requires 3 columns"
    echo -e "\t\t\tvector2d - 2D vector plot from 3D coords, (a, b): xa,ya,za,xb,yb,zb, aka two points"
    echo -e "\t\t\tvecdist2d - 2D vector plot from 3D coords, as vector2d, with distance label, file format: x1,y1,z1,x2,y2,z2,dist"
    echo -e ""
    echo -e "\t\t\tsimple3d - standard splot"
    echo -e "\t\t\tsimpal3d - 3D colored point plot, requires x,y,z,c"
    echo -e "\t\t\tvector3d - 3D vector plot, requires (a, direction) aka point and vector direction"
    echo -e "\t\t\tvecpal3d - 3D colored vector plot, requires (a, direction, c) aka point, vector direction and single value"
    echo -e "\t\t\theat3d - 3D heat map, requires 4 columns sorted by X value with blank lines between different values"
    exit
fi

if [ -z "$INPUT" ]; then
    echo "Invalid or missing input file, see --help"
    exit
fi

if [ -z "$MODE" ]; then
    echo "Invalid mplot mode, see --help"
    exit
fi

# 2D heat map
if [ "$MODE" = "heat2d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_2D}
    set view map; set dgrid3d;
    set pm3d interpolate 0,0
    splot '${INPUT}' using 1:2:3 with pm3d
EOFMarker

# simple 2D point plot
elif [ "$MODE" = "simple2d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_2D}
    plot '${INPUT}'
EOFMarker

# 2D vector plot, requires start and end point
elif [ "$MODE" = "vector2d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_2D}
    plot '${INPUT}' using 1:2:(\$4-\$1):(\$5-\$2) with vectors
EOFMarker

# 2D vector plot with vec length as input, requires start and end point
elif [ "$MODE" = "vecdist2d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_2D}
    plot '${INPUT}' using 1:2:(\$4-\$1):(\$5-\$2) with vectors, '${INPUT}' u 4:5:7 with labels left
EOFMarker

# simple 3D point plot
elif [ "$MODE" = "simple3d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_3D}
    splot '${INPUT}'
EOFMarker

# simple 3D colored point plot
elif [ "$MODE" = "simpal3d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_3D}
    splot '${INPUT}' using 1:2:3:4 palette
EOFMarker

# 3D vector plot in format (point, direction)
elif [ "$MODE" = "vector3d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_3D}
    splot '${INPUT}' using 1:2:3:4:5:6 with vectors
EOFMarker

# 3D colored vector plot in format (point, direction, color)
elif [ "$MODE" = "vecpal3d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_3D}
    splot '${INPUT}' using 1:2:3:4:5:6:7 with vectors palette
EOFMarker

# 3D heat map, requires 4 columns sorted by X coordinate with blank lines
elif [ "$MODE" = "heat3d" ]; then
    gnuplot --persist <<-EOFMarker
    ${PREFIX_3D}
    set samples 25, 25
    set isosamples 50, 50
    set pm3d interpolate 0, 0
    splot '${INPUT}' using 1:2:3:4 with pm3d
EOFMarker
else
    echo "Invalid mplot mode, see --help"
    exit
fi

